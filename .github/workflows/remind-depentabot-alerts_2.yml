name: Remind Dependabot alerts2
on:
  push:
  workflow_dispatch:

jobs:
  dependabot-notifier2:
    runs-on: ubuntu-latest
    permissions:
      security-events: read
    steps:
      - name: Get Dependabot alerts
        id: get-dependabot-alerts
        env:
          GH_TOKEN: ${{ secrets.DEPENDABOT_TOKEN }}
        run: |
          dependabot_alerts=$(gh api \
             -H "Accept: application/vnd.github+json" \
             -H "X-GitHub-Api-Version: 2022-11-28" \
             /repos/mtsuchiya/sample01/dependabot/alerts?state=fixed \
             --jq \
             'map({
                severity: .security_vulnerability.severity,
                package_name: .dependency.package.name
              })')
          echo "DEPENDABOT_ALERTS<<EOF" >> "$GITHUB_OUTPUT"
          echo $dependabot_alerts >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create Slack Message
        id: create-slack-message
        if: (echo ${{ steps.get-dependabot-alerts.outputs.DEPENDABOT_ALERTS }} | jq 'length' > 0)
        run: |
          dependabot_alerts='${{ steps.get-dependabot-alerts.outputs.DEPENDABOT_ALERTS }}'
          slack_message="Dependabot alerts を確認してください。\n\
          https://github.com/mtsuchiya/sample01/security/dependabot\n\
          total count: $(echo $dependabot_alerts | jq 'length')\n\
          critical count: $(echo $dependabot_alerts | jq '.[] | select(.severity == "critical") | .severity' | wc -l)\n\
          high count: $(echo $dependabot_alerts | jq '.[] | select(.severity == "high") | .severity' | wc -l)\n\
          medium count: $(echo $dependabot_alerts | jq '.[] | select(.severity == "medium") | .severity' | wc -l)\n\
          low count: $(echo $dependabot_alerts | jq '.[] | select(.severity == "low") | .severity' | wc -l)\n"
          echo "SLACK_MESSAGE=$slack_message" >> "$GITHUB_OUTPUT"

      - name: Slack Notification Dependabot alerts
        uses: rtCamp/action-slack-notify@v2
        if: steps.create-slack-message.outputs.SLACK_MESSAGE != ''
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: DeployBot
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: Dependabot alerts
          SLACK_COLOR: good
          ENABLE_ESCAPES: true
          SLACK_MESSAGE: ${{ steps.create-slack-message.outputs.SLACK_MESSAGE }}
